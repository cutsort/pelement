#!/usr/local/bin/perl -I../modules

=head1 NAME

  seqRegister.pl Web registration of sequencing reactions.

=cut

use Pelement;
use PelementCGI;
use Session;
use Gel;

use CGI::FormBuilder;
use CGI::Session qw/-ip-match/;

use strict;

my $cgi = new PelementCGI;
my $s = new Session({-log_level=>0});

CGI::Session->name("PELEMENTSID");
my $cgiSession = new CGI::Session("driver:PostgreSQL", $cgi, {Handle=>$s->db});

my $cookie = $cgi->cookie(PELEMENTSID => $cgiSession->id);

my $user_id;
if (!($user_id =$cgiSession->param('user_id')) ) {
  $cgiSession->save_param($cgi);
  $cgiSession->param('referrer','digRegister.pl');
  print $cgi->redirect(-cookie=>$cookie,-uri=>"login.pl");
} elsif ($cgiSession->param('restore_param')) {
  $cgiSession->load_param($cgi);
}

print $cgi->header( -cookie => $cookie );
print $cgi->init_page({-title=>"Sequencing Registration",
                       -script=>{-src=>'/pelement/sorttable.js'},
                       -style=>{-src=>'/pelement/pelement.css'}});
print $cgi->banner();

my $form = new CGI::FormBuilder(
           header => 0,
           method => 'POST',
           reset  => 'Clear',
           validate => { 'ipcr' => 'VALUE',
                         'primer' => 'VALUE',
                       },
           );

my $primerS = $s->PrimerSet({-seq_primer=>'t'})->select;
my $gel_todo = $s->Gel_To_DoSet()->select;

unless ($primerS && $gel_todo) {
  print $cgi->h3("There was a problem connecting to the db.");
  $s->die;
}

my @primers;
map { push @primers, $_->name } sort { $a->name <=> $b->name} $primerS->as_list;

my @gel_todo;
map { push @gel_todo, $_->name } sort { $b->ipcr_date cmp $a->ipcr_date} $gel_todo->as_list;

$form->field(name=>'ipcr',options=>\@gel_todo,label=>'iPCR Name');
$form->field(name=>'primer',options=>\@primers,label=>'Sequencing Primer');

if ($form->submitted && $form->validate) {

    my $ipcr = $form->field('ipcr');
    my $primer = $form->field('primer');


    # the name is autogenerated
    my $gel = $s->Gel({-ipcr_name  => $ipcr,
                       -seq_primer => $primer,
                       -user_login => $user_id,
                       -gel_date   => 'today'});
    # insert it
    $gel->insert;

    # I still need to have this done by DbObject
    $gel->select;

    ## remember to change this
    unless ($gel->id) {
      print $cgi->p($cgi->em("There was some trouble inserting this record."));
    } else {
      (my $batch = $ipcr) =~ s/^(\d+)\..*/$1/;
      print $cgi->p($cgi->em('Gel '.$gel->name.' for batch ',
                    $cgi->a({-href=>'batchReport.pl?batch='.$batch},$batch),
                    ' inserted.'));
      write_sample_sheet($cgi,$s,$gel);
      
      print $cgi->p($cgi->a({-href=>'seqRegister.pl'},'Register another gel.'));

    }

} elsif ( scalar(@gel_todo) == 0 ) {

    print $cgi->center($cgi->b("There are no batches ready for digestion."));

} else {

    print $cgi->p($cgi->em('You are currently logged in as ',$cgi->b($user_id),'. '),
          $cgi->a({-href=>'logout.pl'},'Logout')),
          $cgi->center($cgi->hr,
                       $form->render(submit=>['Enter']));

}
     
print $cgi->footer([
                 {link=>"batchReport.pl",name=>"Batch Report"},
                 {link=>"strainReport.pl",name=>"Strain Report"},
                 {link=>"gelReport.pl",name=>"Gel Report"},
                 {link=>"strainStatusReport.pl",name=>"Strain Status Report"},
                  ]);

print $cgi->close_page();

$s->exit;
exit(0);

sub write_sample_sheet
{
  my $cgi = shift; # cgi
  my $s = shift;  # session
  my $g = shift;  # gel object

  my $contents = $g->sample_sheet();

  my $file = '/data/ABIdata/pt/'.$g->name.'.plt';

  while (-e $file) {
    print $cgi->center($cgi->b("$file already exists. Not overwriting."),$cgi->br);
    $file .= "_redo";
    return if length($file) > 255;
  }

  open(FIL,">$file") or (print $cgi->center($cgi->b("Cannot open plt file."),$cgi->br) and return);

  print FIL $contents
            or
            (print $cgi->center($cgi->b("Some trouble writing to plt file."),$cgi->br) and return);

  close(FIL);

}
